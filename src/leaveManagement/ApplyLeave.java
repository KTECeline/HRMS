/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package leaveManagement;

import javax.swing.JTextField;
import java.io.FileWriter;
import javax.swing.JOptionPane;
import java.util.Date;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import auth.Session;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;


/**
 *
 * @author jinyi
 */
public class ApplyLeave extends javax.swing.JFrame {
    private JTextField reason;
    /**
     * Creates new form NewJFrame
     */
    public ApplyLeave() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtreason = new javax.swing.JTextArea();
        startDate = new com.toedter.calendar.JDateChooser();
        jLabel10 = new javax.swing.JLabel();
        endDate = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 153, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jLabel1.setText("Leave ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(429, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(425, 425, 425))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 930, -1));

        type.setBackground(new java.awt.Color(255, 204, 204));
        type.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medical Leave", "Annual Leave", "Unpaid Leave", "Maternity Leave" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });
        getContentPane().add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 390, -1));

        jLabel2.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel2.setText("Type of Leave :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 178, -1));

        jLabel3.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel3.setText("Date                :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 178, -1));

        jLabel5.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 439, -1, -1));

        submit.setBackground(new java.awt.Color(255, 204, 204));
        submit.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 350, -1, -1));

        jLabel4.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jLabel4.setText("Reason            :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 178, -1));

        jLabel7.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        jLabel7.setText("(Optional)");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 178, -1));

        txtreason.setColumns(20);
        txtreason.setRows(5);
        jScrollPane2.setViewportView(txtreason);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 390, -1));
        getContentPane().add(startDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 180, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel10.setText("-");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 180, -1, 22));
        getContentPane().add(endDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, 170, -1));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 120, 50));

        jButton2.setBackground(new java.awt.Color(255, 204, 204));
        jButton2.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton2.setText("Leave History");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 420, 150, 50));

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jButton3.setText("Check Leave Application Status");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 280, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // Create a DefaultComboBoxModel to hold the items
    
    }//GEN-LAST:event_typeActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
     String id= Session.userId;
     String Department = Session.role;
     String username = Session.username;
     String gender = Session.gender;
     String reason= txtreason.getText()  ;
     String typeL= type.getSelectedItem().toString();
     Date Start= (Date) startDate.getDate();
     Date End = (Date) endDate.getDate();
     String status = "Pending"; 
     int annual= 0;
     Date apply = new Date();
     int days = 0 ;
     String comment = "none";
    
    if (gender.equalsIgnoreCase("Male") && typeL.equalsIgnoreCase("Maternity Leave") ){
             JOptionPane.showMessageDialog(this, "Only female workers could apply for Maternity Leave.");
             return;
    }
     
    if (Start == null){
             JOptionPane.showMessageDialog(this, "Starting date cannot be empty.");
             return;
         }
    
    if (End == null){
             JOptionPane.showMessageDialog(this, "Ending date cannot be empty.");
             return;
         } 
    
    LocalDate startDatelocal = Start.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    LocalDate endDatelocal = End.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    
    if (Start == End ){
        days = 1 ;
    }else{
        days = (int) ChronoUnit.DAYS.between(startDatelocal, endDatelocal) + 1; 
    }
    if (reason.isEmpty()){
             reason = " "; 
         }
    
    
    
    int[] result = countUsernameOccurrences(username);
    int occurrences = result[0];
    int remainingAnnualDays = result[1];

    if (typeL.equals("Annual Leave ")) { 
        annual = remainingAnnualDays - days;
    } else {
        annual = remainingAnnualDays;
    }
    
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    String startFormatted = dateFormat.format(Start);
    String endFormatted = dateFormat.format(End);
    String applyFormatted = dateFormat.format(apply);
    
    
        try {
            FileWriter writer = new FileWriter("leave.txt",true);
            writer.write(id + "," + username + "," + Department + "," + typeL + "," + startFormatted + "," + endFormatted + "," + days + "," + reason +"," + status + "," + annual + "," + apply + "," + comment+ "\n");
            writer.close();
            JOptionPane.showMessageDialog(this, "Your application has submitted to your manager. They will approve or reject it.");
            txtreason.setText("");
            type.setSelectedIndex(0); // Reset to the first item or any default item
            startDate.setDate(null);  // Clear the start date picker
            endDate.setDate(null);    // Clear the end date picker
            
        } 
        
        catch (Exception e) {
            e.printStackTrace(); // This will print the error to the console
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            }// TODO add your handling code here:
    }//GEN-LAST:event_submitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    ui.dashboard.BackButton backButton = new ui.dashboard.BackButton();
        backButton.navigateBasedOnRole();
        this.dispose();   // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new leaveManagement.LeaveHistory().setVisible(true);
            }
        });  this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new leaveManagement.LeaveStatus().setVisible(true);
            }
        });  this.dispose();       // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplyLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplyLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplyLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplyLeave.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplyLeave().setVisible(true);
            }
        });
    } 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser endDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser startDate;
    private javax.swing.JButton submit;
    private javax.swing.JTextArea txtreason;
    private javax.swing.JComboBox<String> type;
    // End of variables declaration//GEN-END:variables

   private int[] countUsernameOccurrences(String username) {
    int count = 0; // Initialize count
    int totalDays = 0; // Initialize total days
    int currentYear = Calendar.getInstance().get(Calendar.YEAR);

    try {
        // Read all lines from the file
        java.util.List<String> lines = Files.readAllLines(Paths.get("leave.txt"));

        // Iterate over each line to count the username with "annual leave" and sum up the days
        for (String line : lines) {
            // Split the line by commas
            String[] parts = line.split(",");

            // Check if parts have enough elements and if both username and leave type match
            if (parts.length > 4 && parts[1].equals(username) && parts[3].equalsIgnoreCase("annual leave ") && parts[8].equalsIgnoreCase("approved")) {
                // Parse the start date from the file
                SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                Date startDate = dateFormat.parse(parts[4]);

                // Check if the start date falls within the current year
                if (startDate.getYear() + 1900 == currentYear) {
                    count++; // Increment count if both conditions are met
                    
                    // Parse the days from the file and add to totalDays
                    try {
                        totalDays += Integer.parseInt(parts[6]);
                    } catch (NumberFormatException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error reading file: " + e.getMessage());
    }

    // Calculate the remaining annual leave days
    int remainingAnnualDays = 12 - totalDays;

    return new int[] {count, remainingAnnualDays}; // Return the count and remaining annual days
}
}