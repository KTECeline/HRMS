package payrollManagement.payrollManager.Update;

import auth.Session;
import payrollManagement.payrollManager.Create.SearchUser;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Hui Nan
 */

public class Update extends javax.swing.JFrame {

    /**
     * Creates new form Update
     */
       
    public Update() {
        initComponents();
        loadTableData();

        table.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
    }
    
     public void setButtonValues(String PayrollID, String EmpID, String EmpName, String Year, String Month, String BSalary, String Allowance, 
                                 String OT, String LatePen, String GSalary, String YeeEPF, String YeeSosco, String YeeEIS, String YeePCB, 
                                 String YeeTDeduction, String YeeNetSalary, String YerEPF, String YerSosco, String YerEIS, String YerCon, 
                                 String BankName, String BankAccount) {
        btnPayrollID.setText(PayrollID);
        btnEmpID.setText(EmpID);
        btnEmpName.setText(EmpName);
        btnYear.setText(Year);
        btnMonth.setText(Month);
        btnBasicSalary.setText(BSalary);
        btnAllowance.setText(Allowance);
        btnOT.setText(OT);
        btnLatePen.setText(LatePen);
        btnGSalary.setText(GSalary);
        btnYeeEPF.setText(YeeEPF);
        btnYeeSosco.setText(YeeSosco);
        btnYeeEIS.setText(YeeEIS);
        btnYeePCB.setText(YeePCB);
        btnYeeTDeduction.setText(YeeTDeduction);
        btnYeeNetSalary.setText(YeeNetSalary);
        btnYerEPF.setText(YerEPF);
        btnYerSosco.setText(YerSosco);
        btnYerEIS.setText(YerEIS);
        btnYerCon.setText(YerCon);
        btnBankName.setText(BankName);
        btnBankAccount.setText(BankAccount);

    }
    
    private void loadTableData() {
        String filePath = "../HRMS_2/Src/payrollManagement/payroll.txt";
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            br.readLine();
            String[] columnsName = {"Payroll ID", "Employee ID", "Employee Name", "Year", "Month"};
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setColumnIdentifiers(columnsName);

            model.setRowCount(0);

            String line;
            while ((line = br.readLine()) != null) {
                String[] dataRow = line.split(",");
                if (dataRow.length >= 5) { 
                    String[] selectedData = {dataRow[0], dataRow[1], dataRow[2], dataRow[3], dataRow[4]}; 
                    model.addRow(selectedData); 
                }
            }

         } catch (IOException ex) {
            Logger.getLogger(TextFileDataToJTable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        mainPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnUpEmp = new javax.swing.JButton();
        btnCal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        BasicSalary = new javax.swing.JLabel();
        btnBasicSalary = new javax.swing.JTextField();
        headerPanel = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JTextField();
        EmpTab = new javax.swing.JTabbedPane();
        box1 = new javax.swing.JPanel();
        allowance = new javax.swing.JLabel();
        btnAllowance = new javax.swing.JTextField();
        btnLatePen = new javax.swing.JTextField();
        latePen = new javax.swing.JLabel();
        OT = new javax.swing.JLabel();
        btnOT = new javax.swing.JTextField();
        GSalary = new javax.swing.JLabel();
        btnGSalary = new javax.swing.JTextField();
        yeeEPF = new javax.swing.JLabel();
        yeeSosco = new javax.swing.JLabel();
        yeeEIS = new javax.swing.JLabel();
        yeePCB = new javax.swing.JLabel();
        yeeTDeduction = new javax.swing.JLabel();
        btnYeePCB = new javax.swing.JTextField();
        btnYeeSosco = new javax.swing.JTextField();
        btnYeeEPF = new javax.swing.JTextField();
        salaryDeduction = new javax.swing.JLabel();
        salaryEarning = new javax.swing.JLabel();
        YeeAmount = new javax.swing.JLabel();
        btnYeeEIS = new javax.swing.JTextField();
        btnYeeNetSalary = new javax.swing.JTextField();
        yeeNetSalary = new javax.swing.JLabel();
        btnYeeTDeduction = new javax.swing.JTextField();
        YeeAmount1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        yerEPF = new javax.swing.JLabel();
        yerSosco = new javax.swing.JLabel();
        yerEIS = new javax.swing.JLabel();
        btnYerEPF = new javax.swing.JTextField();
        btnYerSosco = new javax.swing.JTextField();
        btnYerEIS = new javax.swing.JTextField();
        YerAmount = new javax.swing.JLabel();
        yerCon = new javax.swing.JLabel();
        btnYerCon = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        searchPicture1 = new javax.swing.JLabel();
        btnPayrollID = new javax.swing.JTextField();
        btnEmpID = new javax.swing.JTextField();
        btnMonth = new javax.swing.JTextField();
        btnBankAccount = new javax.swing.JTextField();
        btnBankName = new javax.swing.JTextField();
        btnEmpName = new javax.swing.JTextField();
        btnYear = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setToolTipText("");
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel1.setToolTipText("");
        mainPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        mainPanel.add(mainPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        title.setFont(new java.awt.Font("Sitka Text", 3, 20)); // NOI18N
        title.setForeground(new java.awt.Color(255, 0, 0));
        title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        title.setText("Table of Employee Salary Details");
        mainPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 370, 50));

        btnExit.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        mainPanel.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 550, -1, 30));

        btnUpEmp.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        btnUpEmp.setText("Update Details");
        btnUpEmp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpEmpActionPerformed(evt);
            }
        });
        mainPanel.add(btnUpEmp, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 550, 130, 30));

        btnCal.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        btnCal.setText("Calculate");
        btnCal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalActionPerformed(evt);
            }
        });
        mainPanel.add(btnCal, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 550, 110, 30));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        mainPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 880, 100));

        BasicSalary.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BasicSalary.setText("Basic Salary                            :");
        mainPanel.add(BasicSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        btnBasicSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBasicSalaryActionPerformed(evt);
            }
        });
        mainPanel.add(btnBasicSalary, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 150, -1));

        headerPanel.setBackground(new java.awt.Color(128, 128, 128));
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        header.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("UPDATE EMPLOYEE SALARY DETAILS");
        header.setToolTipText("");
        headerPanel.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 535, -1));

        mainPanel.add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 50));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Search");
        mainPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, -1, -1));

        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        mainPanel.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 70, 220, -1));

        EmpTab.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 51, 51), null, null));

        allowance.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        allowance.setText("Allowance                 :");

        btnAllowance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllowanceActionPerformed(evt);
            }
        });

        btnLatePen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLatePenActionPerformed(evt);
            }
        });

        latePen.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        latePen.setText("Late Penalty              :");

        OT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        OT.setText("Over Time                 :");

        btnOT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOTActionPerformed(evt);
            }
        });

        GSalary.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        GSalary.setForeground(new java.awt.Color(0, 51, 255));
        GSalary.setText("Gross Salary              :");

        btnGSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGSalaryActionPerformed(evt);
            }
        });

        yeeEPF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yeeEPF.setText("EPF                            :");

        yeeSosco.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yeeSosco.setText("Sosco                        :");

        yeeEIS.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yeeEIS.setText("EIS                             :");

        yeePCB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yeePCB.setText("PCB                           :");

        yeeTDeduction.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yeeTDeduction.setForeground(new java.awt.Color(0, 51, 255));
        yeeTDeduction.setText("Total Deduction       :");

        btnYeePCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeePCBActionPerformed(evt);
            }
        });

        btnYeeSosco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeeSoscoActionPerformed(evt);
            }
        });

        btnYeeEPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeeEPFActionPerformed(evt);
            }
        });

        salaryDeduction.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        salaryDeduction.setForeground(new java.awt.Color(255, 0, 0));
        salaryDeduction.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        salaryDeduction.setText("Salary Deduction");

        salaryEarning.setFont(new java.awt.Font("Sitka Text", 3, 14)); // NOI18N
        salaryEarning.setForeground(new java.awt.Color(255, 0, 0));
        salaryEarning.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        salaryEarning.setText("Salary Earning");

        YeeAmount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        YeeAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YeeAmount.setText("Amount (RM)");

        btnYeeEIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeeEISActionPerformed(evt);
            }
        });

        btnYeeNetSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeeNetSalaryActionPerformed(evt);
            }
        });

        yeeNetSalary.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        yeeNetSalary.setForeground(new java.awt.Color(255, 0, 0));
        yeeNetSalary.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        yeeNetSalary.setText("Net Salary                :");

        btnYeeTDeduction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYeeTDeductionActionPerformed(evt);
            }
        });

        YeeAmount1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        YeeAmount1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YeeAmount1.setText("Amount (RM)");

        javax.swing.GroupLayout box1Layout = new javax.swing.GroupLayout(box1);
        box1.setLayout(box1Layout);
        box1Layout.setHorizontalGroup(
            box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(box1Layout.createSequentialGroup()
                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(box1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(box1Layout.createSequentialGroup()
                                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(allowance, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(OT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(latePen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30))
                            .addGroup(box1Layout.createSequentialGroup()
                                .addComponent(GSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, box1Layout.createSequentialGroup()
                                .addGap(0, 3, Short.MAX_VALUE)
                                .addComponent(salaryEarning, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66)))
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLatePen, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(btnAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOT, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGSalary)))
                    .addGroup(box1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(YeeAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addGap(111, 111, 111)
                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(box1Layout.createSequentialGroup()
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yeeNetSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeeTDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnYeeNetSalary, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(btnYeeTDeduction)))
                    .addGroup(box1Layout.createSequentialGroup()
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salaryDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeeEPF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeeSosco, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeeEIS, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeePCB))
                        .addGap(27, 27, 27)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(YeeAmount1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(btnYeeEPF)
                            .addComponent(btnYeeSosco)
                            .addComponent(btnYeeEIS)
                            .addComponent(btnYeePCB))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        box1Layout.setVerticalGroup(
            box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(box1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(YeeAmount)
                    .addComponent(YeeAmount1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(box1Layout.createSequentialGroup()
                        .addComponent(salaryEarning)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(allowance)
                            .addComponent(btnAllowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(OT, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnOT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(latePen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLatePen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GSalary)
                            .addComponent(btnGSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(box1Layout.createSequentialGroup()
                        .addComponent(salaryDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnYeeEPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(box1Layout.createSequentialGroup()
                                .addComponent(yeeEPF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnYeeSosco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(box1Layout.createSequentialGroup()
                                .addComponent(yeeSosco, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnYeeEIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeeEIS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnYeePCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yeePCB))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yeeTDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnYeeTDeduction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yeeNetSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnYeeNetSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(361, 361, 361))
        );

        EmpTab.addTab("Employee", box1);

        yerEPF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yerEPF.setText("EPF                                   :");

        yerSosco.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yerSosco.setText("Sosco                               :");

        yerEIS.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yerEIS.setText("EIS                                    :");

        btnYerEPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYerEPFActionPerformed(evt);
            }
        });

        btnYerSosco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYerSoscoActionPerformed(evt);
            }
        });

        btnYerEIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYerEISActionPerformed(evt);
            }
        });

        YerAmount.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        YerAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        YerAmount.setText("Amount (RM)");

        yerCon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        yerCon.setForeground(new java.awt.Color(0, 51, 255));
        yerCon.setText("Total Contribution          :");

        btnYerCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYerConActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(YerAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(yerCon)
                                .addComponent(yerEIS, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(yerSosco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(yerEPF, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnYerSosco)
                            .addComponent(btnYerEPF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnYerCon, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnYerEIS, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(288, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(YerAmount)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnYerEPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(yerEPF)
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yerSosco)
                            .addComponent(btnYerSosco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(yerEIS)
                            .addComponent(btnYerEIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yerCon)
                    .addComponent(btnYerCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        EmpTab.addTab("Employer", jPanel2);

        mainPanel.add(EmpTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 880, 290));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Payroll ID", "Employee ID", "Employee Name", "Year", "Month" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        mainPanel.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 70, -1, -1));

        searchPicture1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/payrollManagement/Images/Search.png"))); // NOI18N
        mainPanel.add(searchPicture1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 150, 40));

        btnPayrollID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayrollIDActionPerformed(evt);
            }
        });
        mainPanel.add(btnPayrollID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 142, -1));

        btnEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpIDActionPerformed(evt);
            }
        });
        mainPanel.add(btnEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 170, 142, -1));

        btnMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthActionPerformed(evt);
            }
        });
        mainPanel.add(btnMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 142, -1));

        btnBankAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBankAccountActionPerformed(evt);
            }
        });
        mainPanel.add(btnBankAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 120, 142, -1));

        btnBankName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBankNameActionPerformed(evt);
            }
        });
        mainPanel.add(btnBankName, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 142, -1));

        btnEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmpNameActionPerformed(evt);
            }
        });
        mainPanel.add(btnEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 142, -1));

        btnYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYearActionPerformed(evt);
            }
        });
        mainPanel.add(btnYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 142, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 938, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        ui.dashboard.BackButton backButton = new ui.dashboard.BackButton();
        backButton.navigateBasedOnRole();
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed
    
    private void btnUpEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpEmpActionPerformed
        String payrollID = btnPayrollID.getText().trim();
        String empID = btnEmpID.getText().trim();
        String empName = btnEmpName.getText().trim();
        String year = btnYear.getText().trim();
        String month = btnMonth.getText().trim();
        String basicSalary = btnBasicSalary.getText().trim();
        String allowance = btnAllowance.getText().trim();
        String overtime = btnOT.getText().trim();
        String latePen = btnLatePen.getText().trim();
        String grossSalary = btnGSalary.getText().trim();
        String yeeEPF = btnYeeEPF.getText().trim();
        String yeeSosco = btnYeeSosco.getText().trim();
        String yeeEIS = btnYeeEIS.getText().trim();
        String yeePCB = btnYeePCB.getText().trim();
        String yeeTDeduction = btnYeeTDeduction.getText().trim();
        String yeeNetSalary = btnYeeNetSalary.getText().trim();
        String yerEPF = btnYerEPF.getText().trim(); 
        String yerSosco = btnYerSosco.getText().trim();
        String yerEIS = btnYerEIS.getText().trim();
        String yerCon = btnYerCon.getText().trim();
        String BankName = btnBankName.getText().trim();
        String BankAccount = btnBankAccount.getText().trim();

        if (payrollID.isEmpty() || empID.isEmpty() || empName.isEmpty() || year.isEmpty() || month.isEmpty() || basicSalary.isEmpty() || allowance.isEmpty() || grossSalary.isEmpty() || 
            yeeNetSalary.isEmpty() || yerEPF.isEmpty() || yerSosco.isEmpty() || 
            yerEIS.isEmpty() || yerCon.isEmpty() || BankName.isEmpty() || BankAccount.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all required fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        File file = new File("../HRMS_2/Src/payrollManagement/payroll.txt");
        StringBuilder fileContent = new StringBuilder();
        boolean recordUpdated = false;

        String updatedBy = Session.getUserId();
        String previousYear = ""; 
        String previousMonth = "";
        String previousBasicSalary = "";

        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;

            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length > 1 && data[0].equals(payrollID)) {
                    previousYear = data[3];  
                    previousMonth= data[4];
                    previousBasicSalary = data[5];
                    String currentRecord = payrollID + "," + empID + "," + empName + "," + year + "," + month + "," + basicSalary + "," + allowance + "," + overtime + "," + 
                                           latePen + "," + grossSalary + "," + yeeEPF + "," + yeeSosco + "," + yeeEIS + "," + yeePCB + "," +
                                           yeeTDeduction + "," + yeeNetSalary + "," + yerEPF + "," + yerSosco + "," + yerEIS + "," + yerCon + "," +
                                           BankName + "," + BankAccount + ",";

                    String existingRecord = String.join(",", data);

                    if (!existingRecord.equals(currentRecord)) {
                        fileContent.append(currentRecord).append(System.getProperty("line.separator"));
                        recordUpdated = true;
                    } else {
                        JOptionPane.showMessageDialog(null, "No changes detected. Update not necessary.");
                        return;
                    }
                } else {
                    fileContent.append(line).append(System.getProperty("line.separator"));
                }
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error reading data: " + e.getMessage());
        }

        if (recordUpdated) {
            if (!previousYear.equals(year) || !previousMonth.equals(month) || !previousBasicSalary.equals(basicSalary)) {
            String[] reasons = {"ANNUAL LEAVE OVER 12 TIMES", "MEDICAL LEAVE OVER 2 TIMES", "EMERGENCY LEAVE OVER 2 TIMES"};

                  String reason = (String) JOptionPane.showInputDialog(
                          null,
                          "Please select a reason for updating the year/month/basic salary:",
                          "Update Reason",
                          JOptionPane.QUESTION_MESSAGE,
                          null,
                          reasons,
                          reasons[0]); 

                  if (reason != null && !reason.trim().isEmpty()) {
                   File historyFile = new File("history.txt");
                   String historyId = "P001"; 

                   if (historyFile.exists() && historyFile.length() > 0) {
                       try (BufferedReader br = new BufferedReader(new FileReader(historyFile))) {
                           String lastLine = null;
                           String line;

                           while ((line = br.readLine()) != null) {
                               lastLine = line;
                           }

                           if (lastLine != null) {
                               String[] data = lastLine.split(",");
                               if (data.length > 0) {
                                   try {

                                       String lastHistoryId = data[0]; 
                                       String numericPart = lastHistoryId.substring(1);  
                                       int nextId = Integer.parseInt(numericPart) + 1; 

                                       historyId = String.format("P%03d", nextId);
                                   } catch (NumberFormatException e) {
                                       JOptionPane.showMessageDialog(null, "Error parsing history ID, starting from 1.");
                                       historyId = "P001"; 
                                   }
                               }
                           }
                           
                       } catch (IOException e) {
                           JOptionPane.showMessageDialog(null, "Error reading history file: " + e.getMessage());
                       }
                       
                   } else {
                       historyId = "P001";
                   }

                   String basicsalary = "" + month + " " + year + " : " + basicSalary ;

                   String timeStamp = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss").format(new Date());

                   String historyRecord = historyId + "," + updatedBy + "," + empID + 
                           "," + previousMonth + " " + previousYear + " : " + previousBasicSalary + "," +
                           basicsalary + "," + reason + "," + timeStamp;

                   try (FileWriter historyWriter = new FileWriter(historyFile, true)) {
                       historyWriter.append(historyRecord).append(System.getProperty("line.separator"));
                       
                   } catch (IOException e) {
                       JOptionPane.showMessageDialog(null, "Error saving history: " + e.getMessage());
                   }

                   // Write the updated content back to the file
                   try (FileWriter writer = new FileWriter(file, false)) {
                       writer.write(fileContent.toString());
                       JOptionPane.showMessageDialog(null, "Update successful!");

                   } catch (IOException e) {
                       JOptionPane.showMessageDialog(null, "Error saving data: " + e.getMessage());
                   }
                   
               } else {
                   JOptionPane.showMessageDialog(null, "Update canceled. Reason is required for updating the Role/Position/Department.");
               }
                  
           } else {
               try (FileWriter writer = new FileWriter(file, false)) {
                   writer.write(fileContent.toString());
                   JOptionPane.showMessageDialog(null, "Update successful!");
               } catch (IOException e) {
                   JOptionPane.showMessageDialog(null, "Error saving data: " + e.getMessage());
               }
           }
       }

        loadTableData();
    }//GEN-LAST:event_btnUpEmpActionPerformed

    private void btnCalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalActionPerformed
         try {
            double basicSalary = Double.parseDouble(btnBasicSalary.getText());
            double allowance = Double.parseDouble(btnAllowance.getText());
            double overtime = Double.parseDouble(btnOT.getText());
            double latePenalty = Double.parseDouble(btnLatePen.getText());

            double grossSalary = basicSalary + allowance + overtime - latePenalty;
            btnGSalary.setText(String.format("%.2f", grossSalary));

            double yeeEPF = grossSalary * 0.11;
            double yeeSOCSO = grossSalary * 0.005;
            double yeeEIS = grossSalary * 0.002;
            double yeePCB = (grossSalary * 12) * 0.05 / 12; 

            btnYeeEPF.setText(String.format("%.2f", yeeEPF));
            btnYeeSosco.setText(String.format("%.2f", yeeSOCSO));
            btnYeeEIS.setText(String.format("%.2f", yeeEIS));
            btnYeePCB.setText(String.format("%.2f", yeePCB));

            double totalDeduction = yeeEPF + yeeSOCSO + yeeEIS + yeePCB;
            btnYeeTDeduction.setText(String.format("%.2f", totalDeduction));

            double netSalary = grossSalary - totalDeduction;
            btnYeeNetSalary.setText(String.format("%.2f", netSalary));

            double yerEPF = grossSalary * 0.13;
            double yerSOCSO = grossSalary * 0.018;
            double yerEIS = grossSalary * 0.002;

            btnYerEPF.setText(String.format("%.2f", yerEPF));
            btnYerSosco.setText(String.format("%.2f", yerSOCSO));
            btnYerEIS.setText(String.format("%.2f", yerEIS));

            double yerCon = yerEPF + yerSOCSO + yerEIS;
            btnYerCon.setText(String.format("%.2f", yerCon));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid numbers for all salary fields.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCalActionPerformed

    private void btnBasicSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBasicSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBasicSalaryActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String searchText = btnSearch.getText().trim().toLowerCase(); 
        String filePath = "../HRMS_2/Src/payrollManagement/payroll.txt";
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            br.readLine();
            String[] columnsName = {"Payroll ID", "Employee ID", "Employee Name", "Month"};
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setColumnIdentifiers(columnsName);

            model.setRowCount(0);

            String line;
            while ((line = br.readLine()) != null) {
                String[] dataRow = line.split(",");
                if (dataRow.length >= 4) { 
                    String payrollid = dataRow[0].toLowerCase();
                    String employeeid = dataRow[1].toLowerCase();
                    String employeename = dataRow[2].toLowerCase();
                    String year = dataRow[3].toLowerCase();
                    String month = dataRow[4].toLowerCase();

                    if (payrollid.contains(searchText) || employeeid.contains(searchText) || employeename.contains(searchText) || year.contains(searchText) || month.contains(searchText)) {
                        String[] selectedData = {dataRow[0], dataRow[1], dataRow[2], dataRow[3], dataRow[4]};
                        model.addRow(selectedData);
                    }
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Update.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed
    
    private void tableMouseClicked(java.awt.event.MouseEvent evt) {                                     
        int selectedRow = table.getSelectedRow(); 
    
        String payrollID = table.getValueAt(selectedRow, 0).toString(); 

        String filePath = "../HRMS_2/Src/payrollManagement/payroll.txt";
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            String line;

            while ((line = br.readLine()) != null) {
                String[] dataRow = line.split(",");

                if (dataRow[0].equals(payrollID)) {
                    String empID = dataRow[1];
                    String empName = dataRow[2];
                    String Year = dataRow[3];
                    String Month = dataRow[4];       
                    String bSalary = dataRow[5];
                    String allowance = dataRow[6];
                    String ot = dataRow[7];
                    String latePen = dataRow[8];
                    String gSalary = dataRow[9];
                    String yeeEPF = dataRow[10];
                    String yeeSosco = dataRow[11];
                    String yeeEIS = dataRow[12];
                    String yeePCB = dataRow[13];
                    String yeeTDeduction = dataRow[14];
                    String yeeNetSalary = dataRow[15];
                    String yerEPF = dataRow[16];
                    String yerSosco = dataRow[17];
                    String yerEIS = dataRow[18];
                    String yerCon = dataRow[19];
                    String BankName = dataRow[20];
                    String BankAccount = dataRow[21];

                    Update updateForm = new Update();
                    updateForm.setButtonValues(payrollID, empID, empName, Year, Month, bSalary, allowance, ot, latePen, gSalary, yeeEPF, yeeSosco, yeeEIS, yeePCB, yeeTDeduction, yeeNetSalary, yerEPF, yerSosco, yerEIS, yerCon, BankName, BankAccount);
                    updateForm.setVisible(true);
                    this.dispose();
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Update.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void btnYerEPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYerEPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYerEPFActionPerformed

    private void btnYerSoscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYerSoscoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYerSoscoActionPerformed

    private void btnYerEISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYerEISActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYerEISActionPerformed

    private void btnYerConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYerConActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYerConActionPerformed

    private void btnYeeTDeductionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeeTDeductionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYeeTDeductionActionPerformed

    private void btnYeeNetSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeeNetSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYeeNetSalaryActionPerformed

    private void btnYeeEISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeeEISActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYeeEISActionPerformed

    private void btnYeeEPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeeEPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYeeEPFActionPerformed

    private void btnYeeSoscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeeSoscoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYeeSoscoActionPerformed

    private void btnYeePCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYeePCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYeePCBActionPerformed

    private void btnGSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGSalaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGSalaryActionPerformed

    private void btnOTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnOTActionPerformed

    private void btnLatePenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLatePenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLatePenActionPerformed

    private void btnAllowanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllowanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAllowanceActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String searchText = btnSearch.getText().trim().toLowerCase();
        String searchCriteria = (String) jComboBox1.getSelectedItem(); 
        String filePath = "../Java Programming/Src/payrollManagement/payroll.txt";
        File file = new File(filePath);

        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            br.readLine();
            String[] columnsName = {"Payroll ID", "Employee ID", "Employee Name", "Year", "Month"};
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            model.setColumnIdentifiers(columnsName);
            model.setRowCount(0);

            String line;
            while ((line = br.readLine()) != null) {
                String[] dataRow = line.split(",");
                if (dataRow.length >= 5) { 
                    String payrollid = dataRow[0].toLowerCase();
                    String employeeid = dataRow[1].toLowerCase();
                    String employeename = dataRow[2].toLowerCase();
                    String year = dataRow[3].toLowerCase();
                    String month = dataRow[4].toLowerCase();
                    
                    boolean match = false;

                    switch (searchCriteria) {
                        case "Payroll ID":
                            match = payrollid.contains(searchText);
                            break;
                        case "Employee ID":
                            match = employeeid.contains(searchText);
                            break;
                        case "Employee Name":
                            match = employeename.contains(searchText);
                            break;
                        case "Year":
                            match = year.contains(searchText);
                            break;
                        case "Month":
                            match = month.contains(searchText);
                            break;
                    }

                    if (match) {
                        String[] selectedData = {dataRow[0], dataRow[1], dataRow[2], dataRow[3], dataRow[4]};
                        model.addRow(selectedData); 
                    }
                }
            }

        } catch (IOException ex) {
            Logger.getLogger(SearchUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnPayrollIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayrollIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPayrollIDActionPerformed

    private void btnMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMonthActionPerformed

    private void btnEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEmpIDActionPerformed

    private void btnBankAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBankAccountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBankAccountActionPerformed

    private void btnBankNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBankNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBankNameActionPerformed

    private void btnEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmpNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEmpNameActionPerformed

    private void btnYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnYearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BasicSalary;
    private javax.swing.JTabbedPane EmpTab;
    private javax.swing.JLabel GSalary;
    private javax.swing.JLabel OT;
    private javax.swing.JLabel YeeAmount;
    private javax.swing.JLabel YeeAmount1;
    private javax.swing.JLabel YerAmount;
    private javax.swing.JLabel allowance;
    private javax.swing.JPanel box1;
    private javax.swing.JTextField btnAllowance;
    private javax.swing.JTextField btnBankAccount;
    private javax.swing.JTextField btnBankName;
    private javax.swing.JTextField btnBasicSalary;
    private javax.swing.JButton btnCal;
    private javax.swing.JTextField btnEmpID;
    private javax.swing.JTextField btnEmpName;
    private javax.swing.JButton btnExit;
    private javax.swing.JTextField btnGSalary;
    private javax.swing.JTextField btnLatePen;
    private javax.swing.JTextField btnMonth;
    private javax.swing.JTextField btnOT;
    private javax.swing.JTextField btnPayrollID;
    private javax.swing.JTextField btnSearch;
    private javax.swing.JButton btnUpEmp;
    private javax.swing.JTextField btnYear;
    private javax.swing.JTextField btnYeeEIS;
    private javax.swing.JTextField btnYeeEPF;
    private javax.swing.JTextField btnYeeNetSalary;
    private javax.swing.JTextField btnYeePCB;
    private javax.swing.JTextField btnYeeSosco;
    private javax.swing.JTextField btnYeeTDeduction;
    private javax.swing.JTextField btnYerCon;
    private javax.swing.JTextField btnYerEIS;
    private javax.swing.JTextField btnYerEPF;
    private javax.swing.JTextField btnYerSosco;
    private javax.swing.JLabel header;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel latePen;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel mainPanel1;
    private javax.swing.JLabel salaryDeduction;
    private javax.swing.JLabel salaryEarning;
    private javax.swing.JLabel searchPicture1;
    private javax.swing.JTable table;
    private javax.swing.JLabel title;
    private javax.swing.JLabel yeeEIS;
    private javax.swing.JLabel yeeEPF;
    private javax.swing.JLabel yeeNetSalary;
    private javax.swing.JLabel yeePCB;
    private javax.swing.JLabel yeeSosco;
    private javax.swing.JLabel yeeTDeduction;
    private javax.swing.JLabel yerCon;
    private javax.swing.JLabel yerEIS;
    private javax.swing.JLabel yerEPF;
    private javax.swing.JLabel yerSosco;
    // End of variables declaration//GEN-END:variables

    private static class TextFileDataToJTable {

        public TextFileDataToJTable() {
        }
    }
}
