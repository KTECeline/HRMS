/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package employeeManagement;


import auth.Session;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;


/**
 *
 * @author Yeong Huey Yee
 */
public class SearchEmployee extends javax.swing.JFrame {

    /**
     * Creates new form SearchEmployee
     */
    public SearchEmployee() {
        initComponents();
        loadTableData();
       
        
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        jTable2MouseClicked(evt);
    }
});



    }
    
    
private void setColumnWidths() {
   jTable2.getColumnModel().getColumn(0).setPreferredWidth(30);   // ID column
    jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);  // Username column
    jTable2.getColumnModel().getColumn(2).setPreferredWidth(100);  // Password column
    jTable2.getColumnModel().getColumn(3).setPreferredWidth(100);  // Full Name column
    jTable2.getColumnModel().getColumn(4).setPreferredWidth(100);   // Gender column
    jTable2.getColumnModel().getColumn(5).setPreferredWidth(80);   // Date of Birth column
    jTable2.getColumnModel().getColumn(6).setPreferredWidth(100);  // Phone Number column
    jTable2.getColumnModel().getColumn(7).setPreferredWidth(100);  // Marital Status column
    jTable2.getColumnModel().getColumn(8).setPreferredWidth(130);  // Nationality column
    jTable2.getColumnModel().getColumn(9).setPreferredWidth(150);   // Email column
    jTable2.getColumnModel().getColumn(10).setPreferredWidth(100);   // Home Address column
    jTable2.getColumnModel().getColumn(11).setPreferredWidth(200);  // Role column
    jTable2.getColumnModel().getColumn(12).setPreferredWidth(150);  // Position column
    jTable2.getColumnModel().getColumn(13).setPreferredWidth(100);  // Department column
    jTable2.getColumnModel().getColumn(14).setPreferredWidth(100);   // Date of Joined column
    jTable2.getColumnModel().getColumn(15).setPreferredWidth(120);   // Employment Type column
    jTable2.getColumnModel().getColumn(16).setPreferredWidth(120);  // Job Title column
    jTable2.getColumnModel().getColumn(17).setPreferredWidth(120);  // Responsiblies column
    jTable2.getColumnModel().getColumn(18).setPreferredWidth(100);  // Contact Number column
    jTable2.getColumnModel().getColumn(19).setPreferredWidth(100);   // Phone Number column
    jTable2.getColumnModel().getColumn(20).setPreferredWidth(130);   // Bank Name column
    jTable2.getColumnModel().getColumn(21).setPreferredWidth(100);  // Account Number column

    jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);  // Disable auto-resize

// Set horizontal scroll policy for jScrollPane2
jScrollPane2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
}
    
    private void loadTableData() {
    String filePath = "usertxt.txt";
    File file = new File(filePath);
    
    try {
        BufferedReader br = new BufferedReader(new FileReader(file));
        String firstLine = br.readLine().trim();
        String[] columnsName = firstLine.split(",");
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setColumnIdentifiers(columnsName);
        
        // Clear existing rows
        model.setRowCount(0);
        
        String line;
        while ((line = br.readLine()) != null) {
            line = line.trim();  // Remove leading and trailing whitespace
            if (line.isEmpty()) {
                continue;  // Skip empty lines
            }
            String[] dataRow = line.split(",");
            model.addRow(dataRow);
        }
        
        setColumnWidths();
        
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
    } catch (Exception ex) {
        Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        bthback = new javax.swing.JButton();
        searchbar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bthRefresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(128, 128, 128));

        header.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("HUMAN RESOURCE MANAGEMENT SYSTEM");
        header.setToolTipText("");

        bthback.setBackground(new java.awt.Color(102, 102, 102));
        bthback.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        bthback.setForeground(new java.awt.Color(255, 255, 255));
        bthback.setText("Back");
        bthback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(bthback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(header)
                    .addComponent(bthback))
                .addContainerGap())
        );

        searchbar.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        searchbar.setText("Search Account");
        searchbar.setToolTipText("");
        searchbar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchbarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchbarFocusLost(evt);
            }
        });
        searchbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbarActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/employeeManagement/image/Search.png"))); // NOI18N

        bthRefresh.setBackground(new java.awt.Color(153, 204, 255));
        bthRefresh.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        bthRefresh.setText("Refresh Table ");
        bthRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bthRefreshActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SEARCH EMPLOYEE INFORMATION");

        jTable2.setBorder(new javax.swing.border.MatteBorder(null));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable2);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel3.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("TABLE OF EMPLOYEE INFORMATION :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(227, 227, 227))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bthRefresh))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchbar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bthRefresh))))
                .addGap(9, 9, 9)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchbarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchbarFocusGained
        if (searchbar.getText().equals("Search Account")) {
            searchbar.setText("");
            searchbar.setForeground(Color.BLACK); // Set the text color back to black
        }
    }//GEN-LAST:event_searchbarFocusGained

    private void searchbarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchbarFocusLost
        if (searchbar.getText().isEmpty()) {
            searchbar.setForeground(Color.GRAY); // Set text color to gray
            searchbar.setText("Search Account");
        }
    }//GEN-LAST:event_searchbarFocusLost

    private void searchbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbarActionPerformed

        String searchText = searchbar.getText().trim().toLowerCase(); // Get the text entered in the search field and convert to lowercase for case-insensitive search
    String filePath = "usertxt.txt";
    File file = new File(filePath);

    try {
        BufferedReader br = new BufferedReader(new FileReader(file));
        String firstLine = br.readLine().trim();
        String[] columnsName = firstLine.split(",");
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setColumnIdentifiers(columnsName);

        // Clear existing rows
        model.setRowCount(0);

        // Search for matching ID, Username, Full Name, Role, or Employment Type
        String line;
        while ((line = br.readLine()) != null) {
            String[] dataRow = line.split(",");
            if (dataRow.length > 0) {
                String id = dataRow[0].toLowerCase();
                String username = dataRow[1].toLowerCase();
                String fullName = dataRow[3].toLowerCase();
                String role = dataRow[11].toLowerCase(); // Assuming the 'Role' column is at index 11
                String employmentType = dataRow[15].toLowerCase(); // Assuming the 'Employment Type' column is at index 15

                // Check if the search text matches the ID, Username, Full Name, Role, or Employment Type
                if (id.contains(searchText) || username.contains(searchText) || fullName.contains(searchText) || role.contains(searchText) || employmentType.contains(searchText)) {
                    model.addRow(dataRow); // Add the matching row to the table
                }
            }
        }

        // Set column widths after populating the table
        setColumnWidths();

    } catch (IOException ex) {
        Logger.getLogger(CreateEmployee.class.getName()).log(Level.SEVERE, null, ex);
    }

    }//GEN-LAST:event_searchbarActionPerformed

    private void bthRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthRefreshActionPerformed
        loadTableData();
    }//GEN-LAST:event_bthRefreshActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
                                   
    }//GEN-LAST:event_jTable2MouseClicked

    private void bthbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bthbackActionPerformed
        ui.dashboard.BackButton backButton = new ui.dashboard.BackButton ();
        backButton.navigateBasedOnRole();
        this.dispose();
    }//GEN-LAST:event_bthbackActionPerformed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        if (evt.getClickCount() == 1) {
        int selectedRow = jTable2.getSelectedRow();  // Get the selected row index
        TableModel model = jTable2.getModel();  // Get the table model

        // Get the values from the selected row
        String userID = model.getValueAt(selectedRow, 0).toString();
        String username = model.getValueAt(selectedRow, 1).toString();
        String password = model.getValueAt(selectedRow, 2).toString();
        String fullName = model.getValueAt(selectedRow, 3).toString();
        String gender = model.getValueAt(selectedRow, 4).toString();
        String birthDate = model.getValueAt(selectedRow, 5).toString();
        String phoneNumber = model.getValueAt(selectedRow, 6).toString();
        String maritalStatus = model.getValueAt(selectedRow, 7).toString();
        String nationality = model.getValueAt(selectedRow, 8).toString();
        String email = model.getValueAt(selectedRow, 9).toString();
        String address = model.getValueAt(selectedRow, 10).toString();
        String role = model.getValueAt(selectedRow, 11).toString();
        String position = model.getValueAt(selectedRow, 12).toString();
        String department = model.getValueAt(selectedRow, 13).toString();
        String dateOfJoining = model.getValueAt(selectedRow, 14).toString();
        String employmentType = model.getValueAt(selectedRow, 15).toString();
        String jobTitle = model.getValueAt(selectedRow, 16).toString();
        String responsibilities = model.getValueAt(selectedRow, 17).toString();
        String emergencyName = model.getValueAt(selectedRow, 18).toString();
        String emergencyPhoneNo = model.getValueAt(selectedRow, 19).toString();
        String bankName = model.getValueAt(selectedRow, 20).toString();
        String accountNumber = model.getValueAt(selectedRow, 21).toString();
        
        // Dispose of the current frame before opening the new one
        this.setVisible(false);  // Use setVisible(false) instead of dispose()
        
        // Create an instance of UpdateEmployee and pass the data
        UpdateEmployee1 updateForm = new UpdateEmployee1();
        updateForm.setEmployeeDetails(userID, username, password, fullName, gender, birthDate, phoneNumber, maritalStatus, nationality, email, address, role, position, department, dateOfJoining, employmentType, jobTitle, responsibilities, emergencyName, emergencyPhoneNo, bankName, accountNumber);
        updateForm.setVisible(true);
    }
        
    }//GEN-LAST:event_jTable2MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
 
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchEmployee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bthRefresh;
    private javax.swing.JButton bthback;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField searchbar;
    // End of variables declaration//GEN-END:variables
}
